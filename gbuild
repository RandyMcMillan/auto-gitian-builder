#!/usr/bin/env bash
#REF: https://raw.githubusercontent.com/bitcoin-core/docs/master/gitian-building/gitian-building-setup-gitian-debian.md

apt-get update
apt-get install sudo git vim python3 ruby apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils make ubuntu-archive-keyring curl firewalld bionic lsb-release docker 
adduser gitianuser

cd /home/gitianuser

	#begin setup
	apt-get install sudo git vim python3 ruby apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils make ubuntu-archive-keyring curl firewalld bionic lsb-release docker 
	echo "TYPE 'exit' then press RETURN"
	echo "TYPE 'exit' then press RETURN"
	echo "TYPE 'exit' then press RETURN"
	sudo -s
	# the version of lxc-start in Debian needs to run as root, so make sure
	# that the build script can execute it without providing a password
	echo "%sudo ALL=NOPASSWD: /usr/bin/lxc-start" > /etc/sudoers.d/gitian-lxc
	echo "%sudo ALL=NOPASSWD: /usr/bin/lxc-execute" >> /etc/sudoers.d/gitian-lxc
	# make /etc/rc.local script that sets up bridge between guest and host
	echo '#!/bin/sh -e' > /etc/rc.local
	echo 'brctl addbr br0' >> /etc/rc.local
	echo 'ip addr add 10.0.3.1/24 broadcast 10.0.3.255 dev br0' >> /etc/rc.local
	echo 'ip link set br0 up' >> /etc/rc.local
	echo 'firewall-cmd --zone=trusted --add-interface=br0' >> /etc/rc.local
	echo 'exit 0' >> /etc/rc.local
	chmod +x /etc/rc.local
	# make sure that USE_LXC is always set when logging in as gitianuser,
	# and configure LXC IP addresses
	echo 'export USE_LXC=1' >> /home/gitianuser/.profile
	echo 'export GITIAN_HOST_IP=10.0.3.1' >> /home/gitianuser/.profile
	echo 'export LXC_GUEST_IP=10.0.3.5' >> /home/gitianuser/.profile

	#
	wget http://archive.ubuntu.com/ubuntu/pool/universe/v/vm-builder/vm-builder_0.12.4+bzr494.orig.tar.gz
	echo "76cbf8c52c391160b2641e7120dbade5afded713afaa6032f733a261f13e6a8e  vm-builder_0.12.4+bzr494.orig.tar.gz" | sha256sum -c
	# (verification -- MUST return OK)
	tar -zxvf vm-builder_0.12.4+bzr494.orig.tar.gz

cd vm-builder-0.12.4+bzr494

	sudo python3 setup.py install

cd /home/gitianuser

	read -p 'ENTER your Github.com username: ' GITHUB_USER_NAME
	#read -sp 'Password: ' GITHUB_USER_PASSWORD
	echo
	echo Thankyou $GITHUB_USER_NAME
	read -p 'ENTER your Github.com user email: ' GITHUB_USER_EMAIL
	echo
	echo Thankyou $GITHUB_USER_NAME for your email.
	read -p 'ENTER your public gpg signing key id: ' PUBLIC_GPG_SIGNING_KEY_ID
	echo
	echo Thankyou $GITHUB_USER_NAME for public gpg signing key id.

	echo "configuring git"
	git config --global user.name GITHUB_USER_NAME
	git config --global user.email GITHUB_USER_EMAIL
	
	git clone https://github.com/bitcoin-core/gitian.sigs.git

cd /home/gitianuser/gitian.sigs

	git remote add $GITHUB_USER_NAME  https://github.com/$GITHUB_USER_NAME/gitian.sigs.git

cd /home/gitianuser

	git clone https://github.com/devrandom/gitian-builder.git
	git clone https://github.com/bitcoin/bitcoin
	git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git

cd /home/gitianuser/gitian-builder

	bin/make-base-vm --lxc --arch amd64 --suite bionic # For releases >= 0.17.0
	bin/make-base-vm --lxc --arch amd64 --suite trusty # For releases <  0.17.0

cd /home/gitianuser

	read -p 'Rebuild base? Y/n ' REBUILD
	if [ $REBUILD == 'Y' ];then
		rm -rf /home/gitianuser/gitian-builder/base-*
		rm -rf /home/gitianuser/gitian-builder/inputs
		rm -rf /home/gitianuser/vm-builder*.gz.*
	cd /home/gitianuser/gitian-builder
		bin/make-base-vm --lxc --arch amd64 --suite bionic # For releases >= 0.17.0
		bin/make-base-vm --lxc --arch amd64 --suite trusty # For releases <  0.17.0
	fi

mkdir /home/gitianuser/gitian-builder/inputs
cd /home/gitianuser/gitian-builder/inputs

	wget  https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX10.11.sdk.tar.xz
	mv MacOSX10.11.sdk.tar.xz MacOSX10.11.sdk.tar.gz

cp /home/gitianuser/bitcoin/contrib/gitian-build.py /home/gitianuser/.
cd /home/gitianuser

	./gitian-build.py --setup
	read -p 'ENTER version (example: 0.19.0.rc3): ' VERSION

cd /home/gitianuser
./gitian-build.py -o l -o m -o w --setup -d -D --detach-sign --no-commit -b $GITHUB_USER_NAME $VERSION

